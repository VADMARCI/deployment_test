
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ${NAMESPACE}
  name: dealership
  labels:
    app: dealership
spec:
  replicas: ${REPLICAS}
  selector:
    matchLabels:
      app: dealership
  template:
    metadata:
      labels:
        app: dealership
    spec:
      imagePullSecrets:
        - name: dockerregistrykey
      containers:
        - image: ${ECR_IMAGE}
          name: dealership
          imagePullPolicy: Always
          resources: { }

          ports:
            - containerPort: 8000
          command:
            - "./server"
          env:
            - name: WRITE_DB_HOST
              value: "${WRITE_DB_HOST}"
            - name: READ_DB_HOST
              value: "${READ_DB_HOST}"
            - name: PORT
              value: "8000"
            - name: DATABASE
              value: "dealership_${DB_ENDING}"
            - name: SENTRY_DNS
              value: ${SENTRY_DNS}
            - name: ENV
              value: ${ENV}
            - name: BRANCH
              value: ${BRANCH}
            - name: COMMIT
              value: ${COMMIT}
            - name: MINIO_ENDPOINT
              value: "s3.amazonaws.com"
            - name: NATS_SERVERS
              value: "nats://dev-playground-nats:4222"

      terminationGracePeriodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  namespace: ${NAMESPACE}
  name: dealership
  labels:
    run: dealership
spec:
  ports:
    - port: 8000
      protocol: TCP
      name: service
  selector:
    app: dealership
  type: NodePort
---

apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ${NAMESPACE}
  name: dealership-admin
  labels:
    app: dealership-admin
spec:
  replicas: ${REPLICAS}
  selector:
    matchLabels:
      app: dealership-admin
  template:
    metadata:
      labels:
        app: dealership-admin
    spec:
      imagePullSecrets:
        - name: dockerregistrykey
      containers:
        - image: ${ECR_IMAGE}
          name: dealership-admin
          imagePullPolicy: Always
          resources: { }
          ports:
            - containerPort: 8000
          command:
            - "./admin"
          env:
            - name: WRITE_DB_HOST
              value: "${WRITE_DB_HOST}"
            - name: READ_DB_HOST
              value: "${READ_DB_HOST}"
            - name: PORT
              value: "8000"
            - name: DATABASE
              value: "dealership_${DB_ENDING}"
            - name: SENTRY_DNS
              value: ${SENTRY_DNS}
            - name: ENV
              value: ${ENV}
            - name: BRANCH
              value: ${BRANCH}
            - name: COMMIT
              value: ${COMMIT}
            - name: MINIO_ENDPOINT
              value: "s3.amazonaws.com"
            - name: NATS_SERVERS
              value: "nats://dev-playground-nats:4222"

      terminationGracePeriodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  namespace: ${NAMESPACE}
  name: dealership-admin
  labels:
    run: dealership-admin
spec:
  ports:
    - port: 8000
      protocol: TCP
      name: service
  selector:
    app: dealership-admin
  type: NodePort


