// Copyright 2022-present Vlabs Development Kft
//
// All rights reserved under a proprietary license.
//
// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CarsColumns holds the columns for the "cars" table.
	CarsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// CarsTable holds the schema information for the "cars" table.
	CarsTable = &schema.Table{
		Name:       "cars",
		Columns:    CarsColumns,
		PrimaryKey: []*schema.Column{CarsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "cars_id",
				Unique:  false,
				Columns: []*schema.Column{CarsColumns[0]},
			},
		},
	}
	// DealershipsColumns holds the columns for the "dealerships" table.
	DealershipsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "city", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
	}
	// DealershipsTable holds the schema information for the "dealerships" table.
	DealershipsTable = &schema.Table{
		Name:       "dealerships",
		Columns:    DealershipsColumns,
		PrimaryKey: []*schema.Column{DealershipsColumns[0]},
	}
	// CarsDealershipCarsColumns holds the columns for the "cars_dealership_cars" table.
	CarsDealershipCarsColumns = []*schema.Column{
		{Name: "cars_id", Type: field.TypeInt},
		{Name: "dealership_id", Type: field.TypeInt},
	}
	// CarsDealershipCarsTable holds the schema information for the "cars_dealership_cars" table.
	CarsDealershipCarsTable = &schema.Table{
		Name:       "cars_dealership_cars",
		Columns:    CarsDealershipCarsColumns,
		PrimaryKey: []*schema.Column{CarsDealershipCarsColumns[0], CarsDealershipCarsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "cars_dealership_cars_cars_id",
				Columns:    []*schema.Column{CarsDealershipCarsColumns[0]},
				RefColumns: []*schema.Column{CarsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "cars_dealership_cars_dealership_id",
				Columns:    []*schema.Column{CarsDealershipCarsColumns[1]},
				RefColumns: []*schema.Column{DealershipsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CarsTable,
		DealershipsTable,
		CarsDealershipCarsTable,
	}
)

func init() {
	CarsDealershipCarsTable.ForeignKeys[0].RefTable = CarsTable
	CarsDealershipCarsTable.ForeignKeys[1].RefTable = DealershipsTable
}
