version: '3.7'
services:
  ns1:
    image: nats
    command: "--config /nats/jetstream.conf --server_name S1"
    #    networks:
    #      - nats
    ports:
      - 4222:4222
    volumes:
      - ./nats:/nats
      - ./persistent-data/server-n1/:/data/nats-server/jetstream

  ns2:
    image: nats
    command: "--config /nats/jetstream.conf --server_name S2"
    #    networks:
    #      - nats
    ports:
      - 4223:4222
    volumes:
      - ./nats:/nats
      - ./persistent-data/server-n2/:/data/nats-server/jetstream

  ns3:
    image: nats
    command: "--config /nats/jetstream.conf --server_name S3"
    #    networks:
    #      - nats
    ports:
      - 4224:4222
    volumes:
      - ./nats:/nats
      - ./persistent-data/server-n3/:/data/nats-server/jetstream

  db:
    image: mysql:8
    platform: linux/x86_64
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
    ports:
      - "33306:3306"
    volumes:
      - my-db:/var/lib/mysql

  redis:
    image: "redis:alpine"
    command: redis-server
    ports:
      - "6379:6379"
    environment:
      - REDIS_REPLICATION_MODE=master

  influxdb:
    image: influxdb:latest
    volumes:
      # Mount for influxdb data directory and configuration
      - influxdb2:/var/lib/influxdb2:rw
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=password
      - DOCKER_INFLUXDB_INIT_ORG=findea-stats-dev
      - DOCKER_INFLUXDB_INIT_BUCKET=stats
      - DOCKER_INFLUXDB_INIT_RETENTION=0
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=influxadmintoken
    ports:
      - "8086:8086"
  grafana:
    build:
      context: .
      dockerfile: grafana/Dockerfile
    ports:
      - "3333:3000"
    restart: always
    environment:
      - INFLUXDB_INIT_ADMIN_TOKEN=influxadmintoken
      - INFLUX_ORG=findea-stats-dev
      - INFLUX_BUCKET=stats
    volumes:
      - grafana-volume:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - influxdb
  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_storage:/data
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: Password123
    command: server --console-address ":9001" /data
#  keto:
#    depends_on:
#      - keto-migrate
#      - keto-namespace-migrate
##      - keto-init
#    image: oryd/keto:v0.11.0-alpha.0
#    ports:
#      - "4466:4466"
#      - "4467:4467"
#    command: serve -c /home/ory/keto.yml
#    restart: on-failure
#    volumes:
#      - type: bind
#        source: ./keto
#        target: /home/ory
#
#  keto-migrate:
#    depends_on:
#      - db
#      - keto-namespace-migrate
#    image: oryd/keto:v0.11.0-alpha.0
#    command: migrate up -y -c /home/ory/keto.yml
#    restart: on-failure
#    volumes:
#      - type: bind
#        source: ./keto
#        target: /home/ory
#
#  keto-namespace-migrate:
#    depends_on:
#      - db
#    image: oryd/keto:v0.11.0-alpha.0
#    command: namespace migrate -c /home/ory/keto.yml
#    restart: on-failure
#    volumes:
#      - type: bind
#        source: ./keto
#        target: /home/ory
#
#  keto-init:
#    image: oryd/keto:v0.11.0-alpha.0
#    environment:
#      - KETO_WRITE_REMOTE=keto:4467
#    volumes:
#      - type: bind
#        source: ./keto/examples
#        target: /home/ory
#    command: relation-tuple create /home/ory/relationships.json --insecure-disable-transport-security
#    restart: on-failure

volumes:
  my-db:
  influxdb2:
  grafana-volume:
  minio_storage:
